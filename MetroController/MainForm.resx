<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>
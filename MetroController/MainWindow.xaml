<Window x:Class="MetroController.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:MetroController.Converters"
        Title="MetroController" Icon="MetroController.ico"
        ResizeMode="CanMinimize" WindowStyle="None"
        AllowsTransparency="True" BorderThickness="3"
        Height="400" Width="380"
        MinHeight="400" MinWidth="390"
        MaxHeight="400" MaxWidth="390"
        Style="{DynamicResource MyWindowStyle}">

    <Window.Resources>
        <converters:BatteryTypeValueToBatteryTypeString x:Key="BatteryTypeValueToBatteryTypeString" />
        <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

        <Color x:Key="WindowBackgroundColor">#FF2D2D30</Color>
        <Color x:Key="HighlightColor">#FF3F3F41</Color>
        <Color x:Key="BlueColor">#FF5A38B5</Color>
        <Color x:Key="ForegroundColor">#FFF4F4F5</Color>

        <SolidColorBrush x:Key="WindowBackgroundColorBrush" Color="{StaticResource WindowBackgroundColor}" />
        <SolidColorBrush x:Key="HighlightColorBrush" Color="{StaticResource HighlightColor}" />
        <SolidColorBrush x:Key="BlueColorBrush" Color="{StaticResource BlueColor}" />
        <SolidColorBrush x:Key="ForegroundColorBrush" Color="{StaticResource ForegroundColor}" />

        <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource HighlightColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BlueColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MyWindowStyle" TargetType="Window">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
            <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Border x:Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}" Background="{StaticResource WindowBackgroundColorBrush}">
                            <Grid>
                                <Border BorderThickness="1">
                                    <AdornerDecorator>
                                        <Grid x:Name="LayoutRoot">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="25" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="15" />
                                            </Grid.RowDefinitions>
                                            <ContentPresenter Grid.Row="1" Grid.RowSpan="2" Margin="7"/>
                                            <Rectangle x:Name="HeaderBackground" Height="25" Fill="{DynamicResource BlueColorBrush}" VerticalAlignment="Top" Grid.Row="0"/>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0">
                                                <Button Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" ToolTip="minimize" Style="{StaticResource WindowButtonStyle}">
                                                    <Button.Content>
                                                        <Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
                                                            <Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2" />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                                <Button Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" ToolTip="close"  Style="{StaticResource WindowButtonStyle}">
                                                    <Button.Content>
                                                        <Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
                                                            <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0">
                                                <Image Name="Logo" Source="Resources/IconTransparent.png" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" Height="18" Width="18" />
                                                <TextBlock x:Name="WindowTitleTextBlock" Grid.Row="0" Text="{TemplateBinding Title}" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"  Margin="8,-1,0,0"  FontSize="16"  Foreground="{TemplateBinding Foreground}"/>
                                            </StackPanel>
                                            <Grid Grid.Row="2">
                                                <Path x:Name="ResizeGrip" Visibility="Collapsed" Width="12" Height="12" Margin="1" HorizontalAlignment="Right" Stroke="{StaticResource BlueColorBrush}" StrokeThickness="1" Stretch="None" Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                                            </Grid>
                                        </Grid>
                                    </AdornerDecorator>
                                </Border>
                                <Border BorderBrush="{StaticResource BlueColorBrush}" BorderThickness="1" Visibility="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource bool2VisibilityConverter}}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" />
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border>
        <Border.Effect>
            <DropShadowEffect BlurRadius="5" Color="Black" Opacity="0.8" ShadowDepth="0.5" />
        </Border.Effect>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Margin="5,0,2,0">
                <TextBlock Margin="5">Controller Index:</TextBlock>
                <ComboBox Width="35" SelectionChanged="SelectedControllerChanged" Height="25" >
                    <ComboBoxItem IsSelected="True">0</ComboBoxItem>
                    <ComboBoxItem>1</ComboBoxItem>
                    <ComboBoxItem>2</ComboBoxItem>
                    <ComboBoxItem>3</ComboBoxItem>
                </ComboBox>
            </StackPanel>

            <Grid  Height="300" Width="350" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" MinHeight="200"/>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <CheckBox x:Name="CheckboxAButton" Grid.Row="0" IsChecked="{Binding SelectedController.IsAPressed, Mode=OneWay}" />
                    <TextBlock Text="A Button" Grid.Row="0" Grid.Column="1"  />
                    <CheckBox x:Name="CheckboxBButton"  Grid.Row="1" IsChecked="{Binding SelectedController.IsBPressed, Mode=OneWay}" />
                    <TextBlock Text="B Button" Grid.Row="1" Grid.Column="1" />
                    <CheckBox x:Name="CheckboxXButton"  Grid.Row="2"  IsChecked="{Binding SelectedController.IsXPressed, Mode=OneWay}"  />
                    <TextBlock Text="X Button" Grid.Row="2" Grid.Column="1" />
                    <CheckBox x:Name="CheckboxYButton"  Grid.Row="3"  IsChecked="{Binding SelectedController.IsYPressed, Mode=OneWay}" />
                    <TextBlock Text="Y Button" Grid.Row="3" Grid.Column="1" />
                    <CheckBox x:Name="CheckboxLeftShoulderButton"  Grid.Row="4"  IsChecked="{Binding SelectedController.IsLeftShoulderPressed, Mode=OneWay}"  />
                    <TextBlock Text="Left Shoulder Button" Grid.Row="4" Grid.Column="1" />
                    <CheckBox x:Name="CheckboxRightShoulderButton"  Grid.Row="5"  IsChecked="{Binding SelectedController.IsRightShoulderPressed, Mode=OneWay}"  />
                    <TextBlock Text="Right Shoulder Button" Grid.Row="5" Grid.Column="1" />
                    <CheckBox x:Name="CheckboxLeftStickButton"  Grid.Row="6"  IsChecked="{Binding SelectedController.IsLeftStickPressed, Mode=OneWay}"  />
                    <TextBlock Text="Left Stick Button" Grid.Row="6" Grid.Column="1" />
                    <CheckBox x:Name="CheckboxRightStickButton"  Grid.Row="7"   IsChecked="{Binding SelectedController.IsRightStickPressed, Mode=OneWay}" />
                    <TextBlock Text="Right Stick Button" Grid.Row="7" Grid.Column="1" />
                    <CheckBox x:Name="CheckboxGuideButton"  Grid.Row="8"   IsChecked="{Binding SelectedController.IsGuidePressed, Mode=OneWay}" />
                    <TextBlock Text="Guide Button" Grid.Row="8" Grid.Column="1" />

                    <Grid Width="50" Height="50" Grid.Row="8" Grid.Column="1" Margin="19,18,49,-15" RenderTransformOrigin="1.262,0.055" VerticalAlignment="Top">
                        <CheckBox x:Name="CheckboxDPadUpButton"  HorizontalAlignment="Center" VerticalAlignment="Top"  IsChecked="{Binding SelectedController.IsDPadUpPressed, Mode=OneWay}" />
                        <CheckBox x:Name="CheckboxDPadDownButton"   HorizontalAlignment="Center" VerticalAlignment="Bottom"  IsChecked="{Binding SelectedController.IsDPadDownPressed, Mode=OneWay}" />
                        <CheckBox x:Name="CheckboxDPadLeftButton"  HorizontalAlignment="Left" VerticalAlignment="Center"  IsChecked="{Binding SelectedController.IsDPadLeftPressed, Mode=OneWay}" />
                        <CheckBox x:Name="CheckboxDPadRightButton"  HorizontalAlignment="Right" VerticalAlignment="Center"  IsChecked="{Binding SelectedController.IsDPadRightPressed, Mode=OneWay}" />
                    </Grid>
                </Grid>

                <Grid Grid.Column="1" MinWidth="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="Left X Axis " Grid.Row="0" />
                    <ProgressBar Grid.Row="1" Minimum="-32768" Maximum="32767"  Value="{Binding SelectedController.LeftThumbStick.X, Mode=OneWay}"  />
                    <TextBlock Text="Left Y Axis" Grid.Row="2" />
                    <ProgressBar Grid.Row="3"  Minimum="-32768" Maximum="32767"  Value="{Binding SelectedController.LeftThumbStick.Y, Mode=OneWay}" />
                    <TextBlock Text="Right X Axis" Grid.Row="4" />
                    <ProgressBar Grid.Row="5"  Minimum="-32768" Maximum="32767"  Value="{Binding SelectedController.RightThumbStick.X, Mode=OneWay}"  />
                    <TextBlock Text="Right Y Axis" Grid.Row="6" />
                    <ProgressBar Grid.Row="7" Minimum="-32768" Maximum="32767"  Value="{Binding SelectedController.RightThumbStick.Y, Mode=OneWay}"  />
                    <TextBlock Text="Left Trigger" Grid.Row="8" />
                    <ProgressBar Grid.Row="9"  Minimum="0" Maximum="255"   Value="{Binding SelectedController.LeftTrigger, Mode=OneWay}" />
                    <TextBlock Text="Right Trigger" Grid.Row="10" />
                    <ProgressBar Grid.Row="11"  Minimum="0" Maximum="255" Value="{Binding SelectedController.RightTrigger, Mode=OneWay}" />
                </Grid>

                <Grid Grid.Row="2" Grid.ColumnSpan="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="1">Vibration Motors</TextBlock>
                    <TextBlock Grid.Column="1">Left Motor</TextBlock>
                    <TextBlock Grid.Column="2">Right Motor</TextBlock>
                    <Button Style="{StaticResource WindowButtonStyle}" Grid.Column="3" Grid.Row="1" Content="Send" Click="SendVibration_Click" />
                    <Slider Margin="2" Grid.Column="1"  Grid.Row="1" VerticalAlignment="Center" Minimum="0" Maximum="1"  x:Name="LeftMotorSpeed"/>
                    <Slider Margin="2" Grid.Column="2"  Grid.Row="1" VerticalAlignment="Center" Minimum="0" Maximum="1" x:Name="RightMotorSpeed" />
                </Grid>

                <Grid Grid.Row="3" Grid.ColumnSpan="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Battery Info:" />
                    <TextBlock  Grid.Column="1" Text="{Binding SelectedController.BatteryInformationGamepad}" />
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>
